---
import { siteConfig } from "../config";
---

<div
  id="hero"
  class="relative isolate overflow-hidden bg-transparent py-24 md:h-screen"
  style={`--accent-color: ${siteConfig.accentColor}`}
>
  
  <!-- Animated Background Elements -->
  <div class="absolute inset-0 -z-10 overflow-hidden">
    <!-- Floating Particles -->
    <div class="floating-particle particle-1"></div>
    <div class="floating-particle particle-2"></div>
    <div class="floating-particle particle-3"></div>
    <div class="floating-particle particle-4"></div>
    <div class="floating-particle particle-5"></div>
    
  <!-- Cloud Computing Iconography: dynamically generated each visit -->
  <div id="cc-icons" class="absolute inset-0 -z-10 pointer-events-none"></div>
  </div>
  <div class="h-full mx-auto p-8 sm:p-12 md:p-16 lg:p-24 flex items-center">
    <div class="flex flex-col md:flex-row items-center md:items-start gap-8 md:gap-12">
      <!-- Profile Photo -->
      <div class="flex-shrink-0">
        <div class="relative group">
          <img 
            src="/profile-photo.jpg" 
            alt="Arman Sheikhhosseini" 
            class="w-32 h-32 sm:w-40 sm:h-40 md:w-48 md:h-48 rounded-full object-cover shadow-2xl border-4 border-white transition-all duration-300 hover:scale-105 hover:shadow-blue-500/30 hover:shadow-2xl animate-fade-in"
          />
          <!-- Glowing ring effect -->
          <div class="absolute inset-0 rounded-full border-2 border-blue-400/50 glow-pulse pointer-events-none"></div>
        </div>
      </div>
      
      <!-- Text Content -->
      <div class="text-center md:text-left">
        <h2
          class="text-pretty text-xl sm:text-2xl md:text-5xl font-semibold tracking-wide text-gray-300 animate-fade-in leading-tight"
        >
          <span id="greet-text" class="greet cool" dir="auto">Hello!</span> <span class="wave-hand" role="img" aria-label="waving hand">👋</span>
        </h2>
        <h1
          class="mt-8 sm:mt-10 md:mt-12 text-pretty text-4xl sm:text-5xl md:text-6xl xl:text-7xl font-bold tracking-tight text-white animate-fade-in animation-delay-200 leading-none"
        >
          I'm <span style={{ color: siteConfig.accentColor }}
            >{siteConfig.name}</span
          >
        </h1>
        <p
          class="mt-6 sm:mt-8 md:mt-10 text-pretty text-lg sm:text-xl md:text-2xl font-normal text-gray-300 animate-fade-in animation-delay-400 leading-relaxed tracking-wide max-w-2xl"
        >
          {siteConfig.title}
        </p>
      </div>
    </div>
  </div>
  <div
    class="absolute bottom-0 left-0 right-0 p-8 sm:p-12 md:p-16 lg:p-24 flex gap-x-4 sm:gap-x-6 md:gap-x-8 text-gray-300 animate-fade-in animation-delay-600"
  >
    {
      siteConfig.social?.email && (
        <a
          href={`mailto:${siteConfig.social.email}`}
          aria-label="Email"
          class="social-icon transition-all duration-300 hover:text-[var(--accent-color)] transform hover:scale-110 hover:-translate-y-1"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8"
          >
            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
            <path d="M3 7a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10z" />
            <path d="M3 7l9 6l9 -6" />
          </svg>
        </a>
      )
    }
    {
      siteConfig.social?.linkedin && (
        <a
          href={siteConfig.social.linkedin}
          target="_blank"
          rel="noopener noreferrer"
          aria-label="LinkedIn"
          class="social-icon transition-all duration-300 hover:text-[var(--accent-color)] transform hover:scale-110 hover:-translate-y-1"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8"
          >
            <>
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M8 11v5" />
              <path d="M8 8v.01" />
              <path d="M12 16v-5" />
              <path d="M16 16v-3a2 2 0 1 0 -4 0" />
              <path d="M3 7a4 4 0 0 1 4 -4h10a4 4 0 0 1 4 4v10a4 4 0 0 1 -4 4h-10a4 4 0 0 1 -4 -4z" />
            </>
          </svg>
        </a>
      )
    }
    {
      siteConfig.social?.twitter && (
        <a
          href={siteConfig.social.twitter}
          target="_blank"
          rel="noopener noreferrer"
          aria-label="Twitter"
          class="social-icon transition-all duration-300 hover:text-[var(--accent-color)] transform hover:scale-110 hover:-translate-y-1"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8"
          >
            <>
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M4 4l11.733 16h4.267l-11.733 -16z" />
              <path d="M4 20l6.768 -6.768m2.46 -2.46l6.772 -6.772" />
            </>
          </svg>
        </a>
      )
    }
    {
      siteConfig.social?.telegram && (
        <a
          href={siteConfig.social.telegram}
          target="_blank"
          rel="noopener noreferrer"
          aria-label="Telegram"
          class="social-icon transition-all duration-300 hover:text-[var(--accent-color)] transform hover:scale-110 hover:-translate-y-1"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8"
          >
            <>
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M15 10l-4 4l6 6l4 -16l-18 7l4 2l2 6l3 -4" />
            </>
          </svg>
        </a>
      )
    }
    {
      siteConfig.social?.github && (
        <a
          href={siteConfig.social.github}
          target="_blank"
          rel="noopener noreferrer"
          aria-label="GitHub"
          class="social-icon transition-all duration-300 hover:text-[var(--accent-color)] transform hover:scale-110 hover:-translate-y-1"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8"
          >
            <>
              <path stroke="none" d="M0 0h24v24H0z" fill="none" />
              <path d="M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5" />
            </>
          </svg>
        </a>
      )
    }
  </div>
  
  
</div>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in {
    animation: fadeIn 0.8s ease-out forwards;
    opacity: 0;
  }

  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes glow-pulse {
    0%, 100% {
      opacity: 0.3;
      transform: scale(1);
    }
    50% {
      opacity: 0.8;
      transform: scale(1.02);
    }
  }

  /* Waving hand */
  .wave-hand {
    display: inline-block;
    transform-origin: 70% 70%;
    animation: hand-wave 1.9s ease-in-out infinite;
    will-change: transform;
  }
  @keyframes hand-wave {
    0%, 100% { transform: rotate(0deg); }
    10% { transform: rotate(14deg); }
    20% { transform: rotate(-8deg); }
    30% { transform: rotate(12deg); }
    40% { transform: rotate(-6deg); }
    50% { transform: rotate(8deg); }
    60% { transform: rotate(-4deg); }
    70% { transform: rotate(4deg); }
    80% { transform: rotate(-2deg); }
    90% { transform: rotate(2deg); }
  }

  @keyframes hand-wave-soft {
    0%, 100% { transform: rotate(0deg); }
    20% { transform: rotate(6deg); }
    40% { transform: rotate(-4deg); }
    60% { transform: rotate(5deg); }
    80% { transform: rotate(-3deg); }
  }

  @media (prefers-reduced-motion: reduce) {
    .wave-hand { animation: hand-wave-soft 2.6s ease-in-out infinite; }
  }

  /* Greeting swap animation */
  .greet { display: inline-block; will-change: transform, opacity, filter; }
  .greet.cool {
    background: linear-gradient(90deg, var(--accent-color), var(--accent-secondary, #a78bfa));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    text-shadow: 0 0 18px rgba(99,102,241,0.25);
    background-size: 200% 100%;
    animation: greet-sheen 7.5s linear infinite;
    position: relative; /* for sparkle sweep */
  }
  .greet.swap { 
    animation: greet-swap 520ms cubic-bezier(.2,.7,.2,1) forwards, 
               greet-chroma 520ms ease-out forwards; 
  }
  /* Sparkle sweep on each swap */
  .greet.cool::after {
    content: '';
    position: absolute;
    top: -20%;
    bottom: -20%;
    left: 0;
    width: 26%;
    transform: translateX(-140%) rotate(18deg);
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.55), transparent);
    filter: blur(2px);
    opacity: 0;
    pointer-events: none;
    mix-blend-mode: screen;
  }
  .greet.cool.swap::after { animation: greet-spark 650ms ease-out 1 forwards; }
  @keyframes greet-swap {
    0% { opacity: 0; transform: translateY(8px) scale(0.98); filter: blur(2px); }
    60% { opacity: 1; transform: translateY(0) scale(1.02); filter: blur(0.5px); }
    100% { opacity: 1; transform: translateY(0) scale(1); filter: blur(0); }
  }

  @keyframes greet-sheen {
    0% { background-position: 0% 50%; }
    100% { background-position: 100% 50%; }
  }

  @keyframes greet-spark {
    0% { transform: translateX(-140%) rotate(18deg); opacity: 0; }
    25% { opacity: 0.85; }
    100% { transform: translateX(160%) rotate(18deg); opacity: 0; }
  }

  @keyframes greet-chroma {
    0% { text-shadow: 0 0 18px rgba(99,102,241,0.25), 1px 0 0 rgba(99,102,241,0.35), -1px 0 0 rgba(16,185,129,0.25); }
    100% { text-shadow: 0 0 18px rgba(99,102,241,0.25), 0 0 0 rgba(99,102,241,0), 0 0 0 rgba(16,185,129,0); }
  }

  @media (prefers-reduced-motion: reduce) {
  .greet.cool { animation: none; }
  .greet.cool::after { display: none; }
  .greet.swap { animation: greet-swap-soft 360ms ease-out forwards; }
  }
  @keyframes greet-swap-soft {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px) rotate(0deg);
      opacity: 0.6;
    }
    33% {
      transform: translateY(-30px) rotate(120deg);
      opacity: 1;
    }
    66% {
      transform: translateY(15px) rotate(240deg);
      opacity: 0.8;
    }
  }

  @keyframes float-reverse {
    0%, 100% {
      transform: translateY(0px) rotate(360deg);
      opacity: 0.7;
    }
    33% {
      transform: translateY(25px) rotate(240deg);
      opacity: 1;
    }
    66% {
      transform: translateY(-15px) rotate(120deg);
      opacity: 0.9;
    }
  }

  @keyframes geometric-float {
    0%, 100% {
      transform: translate(0, 0) rotate(0deg);
      opacity: 0.5;
    }
    25% {
      transform: translate(30px, -30px) rotate(90deg);
      opacity: 0.8;
    }
    50% {
      transform: translate(-15px, -50px) rotate(180deg);
      opacity: 1;
    }
    75% {
      transform: translate(-40px, -15px) rotate(270deg);
      opacity: 0.7;
    }
  }

  .animate-fade-in {
    animation: fade-in 1s ease-out forwards;
  }

  .glow-pulse {
    animation: glow-pulse 2s ease-in-out infinite;
  }

  /* Floating Particles */
  .floating-particle {
    position: absolute;
    border-radius: 50%;
    pointer-events: none;
    /* glow removed */
  }

  .particle-1 {
    width: 12px;
    height: 12px;
    top: 20%;
    left: 10%;
    background: linear-gradient(45deg, rgba(59, 130, 246, 0.6), rgba(147, 51, 234, 0.4));
    border: 1px solid rgba(59, 130, 246, 0.8);
    animation: float 6s ease-in-out infinite;
    animation-delay: 0s;
  }

  .particle-2 {
    width: 16px;
    height: 16px;
    top: 60%;
    left: 80%;
    background: linear-gradient(135deg, rgba(147, 51, 234, 0.6), rgba(59, 130, 246, 0.4));
    border: 1px solid rgba(147, 51, 234, 0.8);
    animation: float-reverse 8s ease-in-out infinite;
    animation-delay: 1s;
  }

  .particle-3 {
    width: 10px;
    height: 10px;
    top: 80%;
    left: 20%;
    background: linear-gradient(90deg, rgba(59, 130, 246, 0.5), rgba(16, 185, 129, 0.3));
    border: 1px solid rgba(59, 130, 246, 0.7);
    animation: float 7s ease-in-out infinite;
    animation-delay: 2s;
  }

  .particle-4 {
    width: 14px;
    height: 14px;
    top: 30%;
    left: 70%;
    background: linear-gradient(225deg, rgba(236, 72, 153, 0.5), rgba(59, 130, 246, 0.4));
    border: 1px solid rgba(236, 72, 153, 0.7);
    animation: float-reverse 9s ease-in-out infinite;
    animation-delay: 3s;
  }

  .particle-5 {
    width: 18px;
    height: 18px;
    top: 10%;
    left: 60%;
    background: linear-gradient(315deg, rgba(59, 130, 246, 0.6), rgba(99, 102, 241, 0.4));
    border: 1px solid rgba(99, 102, 241, 0.8);
    animation: float 5s ease-in-out infinite;
    animation-delay: 4s;
  }

  /* Geometric Shapes */
  .geometric-shape {
    position: absolute;
    border: 2px solid rgba(59, 130, 246, 0.4);
    pointer-events: none;
  }

  .shape-1 {
    width: 50px;
    height: 50px;
    top: 15%;
    right: 15%;
    transform: rotate(45deg);
    animation: geometric-float 12s ease-in-out infinite;
    animation-delay: 0s;
    background: rgba(59, 130, 246, 0.1);
  }

  .shape-2 {
    width: 70px;
    height: 70px;
    bottom: 20%;
    left: 5%;
    border-radius: 50%;
    animation: geometric-float 15s ease-in-out infinite reverse;
    animation-delay: 2s;
    background: rgba(59, 130, 246, 0.08);
  }

  .shape-3 {
    width: 40px;
    height: 40px;
    top: 50%;
    right: 30%;
    clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
    background: rgba(59, 130, 246, 0.2);
    border: 2px solid rgba(59, 130, 246, 0.5);
    animation: geometric-float 10s ease-in-out infinite;
    animation-delay: 4s;
    box-shadow: 0 0 12px rgba(59, 130, 246, 0.3);
  }

  .animation-delay-200 {
    animation-delay: 0.2s;
  }

  .animation-delay-400 {
    animation-delay: 0.4s;
  }

  .animation-delay-600 {
    animation-delay: 0.6s;
  }

  /* Profile photo hover effects */
  .group:hover img {
    transform: scale(1.05);
    box-shadow: 0 25px 50px -12px rgba(59, 130, 246, 0.4);
  }

  /* Social icon hover effects */
  .social-icon {
    position: relative;
    display: inline-flex;
    padding: 8px;
    border-radius: 12px;
    background: rgba(59, 130, 246, 0.1);
    border: 1px solid rgba(59, 130, 246, 0.2);
  }

  .social-icon:hover {
    background: rgba(59, 130, 246, 0.2);
    border-color: rgba(59, 130, 246, 0.4);
    box-shadow: 0 8px 25px rgba(59, 130, 246, 0.3);
  }

  .social-icon::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: 12px;
    background: linear-gradient(45deg, rgba(59, 130, 246, 0.1), rgba(147, 51, 234, 0.1));
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .social-icon:hover::before {
    opacity: 1;
  }

  /* Dynamic cloud-computing icons */
  #cc-icons .cc-icon { position: absolute; color: var(--accent-color); opacity: 0.6; /* drop-shadow removed */ will-change: transform; }
  #cc-icons .cc-icon svg { display: block; width: 40px; height: 40px; stroke: currentColor; }
</style>

<script>
  // Dynamically spawn and animate cloud-computing icons with increasing randomness per visit
  document.addEventListener('DOMContentLoaded', () => {
    const prefersReduced = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    const layer = document.getElementById('cc-icons');
    const hero = document.getElementById('hero');
    if (!layer || !hero) return;

  const accent = getComputedStyle(hero).getPropertyValue('--accent-color') || '#60a5fa';
  const accent2 = getComputedStyle(hero).getPropertyValue('--accent-secondary') || '#a78bfa';

    // Generic cloud-computing glyphs (currentColor-stroked)
    const ICONS = [
      // Cloud
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M7 18h10a4 4 0 0 0 0-8 6 6 0 0 0-11.5-1.5A3.5 3.5 0 0 0 7 18z'/></svg>",
      // Cloud upload
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M7 18h10a4 4 0 0 0 0-8 6 6 0 0 0-11.5-1.5A3.5 3.5 0 0 0 7 18z'/><path d='M12 14V8'/><path d='M9.5 10.5 12 8l2.5 2.5'/></svg>",
      // Cloud download
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M7 18h10a4 4 0 0 0 0-8 6 6 0 0 0-11.5-1.5A3.5 3.5 0 0 0 7 18z'/><path d='M12 10v6'/><path d='M9.5 13.5 12 16l2.5-2.5'/></svg>",
      // Cloud sync
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M7 18h10a4 4 0 0 0 0-8 6 6 0 0 0-11.5-1.5A3.5 3.5 0 0 0 7 18z'/><path d='M9 12a4 4 0 0 1 6 0'/><path d='M9 12l-1.5-1.5M9 12l-1.5 1.5M15 12l1.5-1.5M15 12l1.5 1.5'/></svg>",
      // Server rack
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><rect x='4' y='5' width='16' height='4' rx='1'/><rect x='4' y='10' width='16' height='4' rx='1'/><rect x='4' y='15' width='16' height='4' rx='1'/><circle cx='6' cy='7' r='.6'/><circle cx='6' cy='12' r='.6'/><circle cx='6' cy='17' r='.6'/></svg>",
      // CPU
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><rect x='7' y='7' width='10' height='10' rx='2'/><path d='M9 3v3M15 3v3M9 21v-3M15 21v-3M3 9h3M3 15h3M21 9h-3M21 15h-3'/></svg>",
      // Database
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><ellipse cx='12' cy='6' rx='6' ry='3'/><path d='M6 6v6c0 1.7 2.7 3 6 3s6-1.3 6-3V6'/><path d='M6 12v6c0 1.7 2.7 3 6 3s6-1.3 6-3v-6'/></svg>",
      // Container
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><rect x='3' y='7' width='18' height='10' rx='2'/><path d='M7 7v10M11 7v10M15 7v10'/></svg>",
      // Network
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><circle cx='6' cy='6' r='3'/><circle cx='18' cy='6' r='3'/><circle cx='12' cy='18' r='3'/><path d='M8.7 7.7L10.5 10m2.9 0 1.8-2.3M12 14.1V12'/></svg>",
      // Load balancer
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><circle cx='12' cy='6' r='2.5'/><path d='M12 8.5v5'/><path d='M6 18l6-4 6 4'/></svg>",
      // Shield / firewall
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M12 3l7 4v5c0 5-3.5 8-7 9-3.5-1-7-4-7-9V7l7-4z'/></svg>",
      // Storage bucket
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M5 7h14l-1 11a3 3 0 0 1-3 3H9a3 3 0 0 1-3-3L5 7z'/><path d='M7 7a5 3 0 0 0 10 0'/></svg>",
      // Function (bolt)
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M13 3L4 14h7l-1 7 9-11h-7z'/></svg>",
  // Monitoring (wave)
  "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M3 12h3l2 5 4-10 3 7h3'/></svg>",
      // API gateway
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M7 8h4M7 12h6M7 16h4'/><path d='M18 8v8'/><path d='M16 10h4M16 14h4'/></svg>",
      // CDN / globe
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><circle cx='12' cy='12' r='9'/><path d='M3 12h18'/><path d='M12 3a14 14 0 0 1 0 18a14 14 0 0 1 0-18'/></svg>",
      // Lock (IAM)
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><rect x='5' y='11' width='14' height='9' rx='2'/><path d='M8 11V8a4 4 0 0 1 8 0v3'/></svg>",
      // Key (access)
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><circle cx='7' cy='12' r='3'/><path d='M10 12h11'/><path d='M18 10v4'/></svg>",
      // Certificate
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M6 3h12a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2z'/><path d='M8 7h8M8 11h6'/><path d='M12 16l2 5-2-1-2 1 2-5z'/></svg>",
      // Queue / stream
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><rect x='4' y='5' width='6' height='14' rx='1'/><rect x='10' y='8' width='6' height='11' rx='1'/><path d='M20 12v6'/></svg>",
      // Message bus
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><circle cx='6' cy='12' r='2'/><circle cx='18' cy='8' r='2'/><circle cx='18' cy='16' r='2'/><path d='M8 12h8M8 12 16 8M8 12l8 4'/></svg>",
      // Disk
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><rect x='4' y='4' width='16' height='16' rx='2'/><path d='M8 4v8h8V4'/></svg>",
      // Backup (clockwise)
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M12 6a6 6 0 1 1-6 6'/><path d='M6 6v4h4'/></svg>",
      // Autoscale arrows
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M12 5V3m0 18v-2M5 12H3m18 0h-2'/><path d='M8 16l4-4 4 4'/><path d='M16 8l-4 4-4-4'/></svg>",
      // Router/switch
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><rect x='4' y='10' width='16' height='6' rx='2'/><path d='M6 10V8m12 2V8'/><path d='M8 16v2m8-2v2'/></svg>",
      // Region pin
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M12 21s-6-4.5-6-9a6 6 0 1 1 12 0c0 4.5-6 9-6 9z'/><circle cx='12' cy='12' r='2'/></svg>",
      // Vault (secure storage)
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><rect x='4' y='4' width='16' height='16' rx='2'/><circle cx='12' cy='12' r='3'/><path d='M12 9v6M9 12h6'/></svg>",
      // Cog (control plane)
      "<svg viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'><path d='M12 8a4 4 0 1 0 0 8 4 4 0 0 0 0-8z'/><path d='M3 12h2M19 12h2M12 3v2M12 19v2M5.6 5.6l1.4 1.4M17 17l1.4 1.4M18.4 5.6L17 7M7 17l-1.4 1.4'/></svg>"
    ];

  const rng = (a, b) => Math.random() * (b - a) + a;
  // More items overall
  const count = Math.floor(rng(24, 36));

  const items = [];
    function resize() {
      const r = hero.getBoundingClientRect();
      return { w: r.width, h: r.height };
    }
    let { w: W, h: H } = resize();
    window.addEventListener('resize', () => { const r = resize(); W = r.w; H = r.h; });

    for (let i = 0; i < count; i++) {
  const el = document.createElement('div');
      el.className = 'cc-icon';
      el.innerHTML = ICONS[Math.floor(Math.random() * ICONS.length)];
  // Bigger icons for stronger presence
  const size = rng(52, 96);
      el.querySelector('svg').style.width = `${size}px`;
      el.querySelector('svg').style.height = `${size}px`;
  el.style.color = accent.trim() || '#60a5fa';
      layer.appendChild(el);

      const x = rng(0, Math.max(0, W - size));
      const y = rng(H * 0.05, Math.max(H * 0.7, size));
  // Slower initial velocities
  const vx = rng(-0.035, 0.035);
  const vy = rng(-0.035, 0.035);
      const rot = rng(0, Math.PI * 2);
  const vrot = rng(-0.0012, 0.0012);
      items.push({ el, x, y, vx, vy, size, rot, vrot });
      // Set initial position immediately
      el.style.transform = `translate3d(${x}px, ${y}px, 0) rotate(${rot}rad)`;
    }

    // Motion multiplier: keep gentle motion even if reduced
  // Slow overall motion
  const motionMul = prefersReduced ? 0.35 : 0.7;
    let last = performance.now();
  let chaos = prefersReduced ? 0.1 : 0.2; // grows over time slowly

    // Subtle mouse parallax
    let mx = 0.5, my = 0.5;
    window.addEventListener('mousemove', (e) => {
      mx = e.clientX / window.innerWidth; my = e.clientY / window.innerHeight;
    }, { passive: true });
    function loop(t) {
      const dt = Math.min(50, t - last);
      last = t;
  // Slower growth of randomness over time
  chaos = Math.min(1.4, chaos + dt * 0.00006 * motionMul);

      for (const it of items) {
        // random jitter increasing with chaos
  it.vx += (Math.random() - 0.5) * 0.0012 * chaos * motionMul;
  it.vy += (Math.random() - 0.5) * 0.0012 * chaos * motionMul;
  it.vrot += (Math.random() - 0.5) * 0.00004 * chaos * motionMul;

        // speed clamp
  const maxV = (0.12 * chaos + 0.04) * motionMul;
        it.vx = Math.max(-maxV, Math.min(maxV, it.vx));
        it.vy = Math.max(-maxV, Math.min(maxV, it.vy));

        // move
        // add parallax drift towards cursor
  const px = (mx - 0.5) * 0.006 * it.size; // gentler parallax
  const py = (my - 0.5) * 0.006 * it.size;
        it.x += (it.vx * dt + px) * motionMul;
        it.y += (it.vy * dt + py) * motionMul;
        it.rot += it.vrot * dt;

        // soft bounds with bounce
        const pad = 12;
        const maxX = Math.max(pad, W - it.size - pad);
        const maxY = Math.max(pad, H - it.size - pad);
        if (it.x < pad || it.x > maxX) it.vx *= -1, it.x = Math.max(pad, Math.min(maxX, it.x));
        if (it.y < pad || it.y > maxY) it.vy *= -1, it.y = Math.max(pad, Math.min(maxY, it.y));

        it.el.style.transform = `translate3d(${it.x}px, ${it.y}px, 0) rotate(${it.rot}rad)`;
      }

      requestAnimationFrame(loop);
    }
    requestAnimationFrame(loop);
  });
</script>

<script>
  // Rotate greeting across common languages
  document.addEventListener('DOMContentLoaded', () => {
    const prefersReduced = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    const greetEl = document.getElementById('greet-text');
    if (!greetEl) return;
  // Requested languages and order: English, French, Spanish, Italian, Persian, Chinese
  const greetings = ['Hello!', 'Bonjour!', 'Hola!', 'Ciao!', 'سلام!', '你好！'];
    let i = 0;
    const swap = () => {
      i = (i + 1) % greetings.length;
      greetEl.classList.remove('swap');
      void greetEl.offsetWidth;
      greetEl.textContent = greetings[i];
      greetEl.setAttribute('dir', 'auto');
      greetEl.classList.add('swap');
    };
    greetEl.classList.add('swap');
    const ms = prefersReduced ? 3600 : 2400;
    const timer = setInterval(swap, ms);
    window.addEventListener('beforeunload', () => clearInterval(timer));
  });
</script>
